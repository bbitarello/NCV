#####################################################
Barbara D Bitarello
Last modified:25.09.2014

README file for this entire directory
#####################################################

First: Filtering of the 1000g lowcov data. 

# mappability tracks
MAP=/mnt/sequencedb/PopGen/cesare/hg19/mappability_tracks/wgEncodeCrgMapabilityAlign50mer_100.bed.gz

# Tandem Repeat Finder (TRF) or soimpleRepeat
TRF=/mnt/sequencedb/PopGen/cesare/hg19/simpleRepeat.bed

# Segmental duplications (ask Aida and/or others)

SDs=/mnt/sequencedb/PopGen/joao/Exome_Project/Results/Filtering/SDs/Human/Human_MAPPED_COORDINATES.bed

cat <( sed 's/chr//' ${SDs})  ${TRF} | sort -nk1,1 -nk2,2 | mergeBed -i  > TRF.SDs.bed

subtractBed -a ${MAP} -b TRF.SDs.bed > Map50_100.TRF.SDs.bed

cp Map50_100.TRF.SDs.bed /mnt/scratch/cee/
BED=/mnt/scratch/cee/Map50_100.TRF.SDs.bed
 
for CHROM in {1..22}; do
ACfile=/mnt/scratch/cee/1000G/allele_freq/LcovEx_50inds/chr${CHROM}/AC_13pops.tsv.gz
ACfileOUT=/mnt/scratch/cee/1000G/allele_freq/LcovEx_50inds/chr${CHROM}/AC_13pops.Map50_100.TRF.SDs.tsv
intersectBed -a <(zcat ${ACfile}) -b ${BED} > ${ACfileOUT}
bgzip -f ${ACfileOUT}
tabix -p vcf ${ACfileOUT}.gz
echo $CHROM
done

#I also found this version of the filters...I am not sure which one Cesare used.

***********************************
** 26.02.2014 ** Cesare de Filippo
***********************************

Filter the 1000Genomes allele counts (AC_13pops*) files for:
1. Regions of unique mappability
2. TRF
3. Segmental duplications
4. Mapped to the chimp genome (pantro2) [this is an extra filter]

Two files will begenerated in the folders /mnt/scratch/cee/1000G/allele_freq/LcovEx_50inds/chr*/:
1. AC_13pops.Map50_100.TRF.SDs.tsv.gz
2. AC_13pops.Map50_100.TRF.SDs.pantro2.tsv.gz

for i in {1..22}; do
    cd /mnt/scratch/cee/1000G/allele_freq/LcovEx_50inds/chr${i}/ 
    BED=/mnt/scratch/cee/bs_genomescan/bedfiles/Map50_100.TRF.SDs.hg19_pantro2.${i}.bed.gz
    intersectBed -a <(zcat AC_13pops.tsv.gz ) -b <(tabix -p bed /mnt/scratch/cee/bs_genomescan/bedfiles/Map50_100.TRF.SDs.bed.gz ${i}) | bgzip -cf > AC_13pops.Map50_100.TRF.SDs.tsv.gz
    tabix -p vcf AC_13pops.Map50_100.TRF.SDs.tsv.gz 
    intersectBed -a <(zcat AC_13pops.tsv.gz ) -b ${BED} | bgzip -cf > AC_13pops.Map50_100.TRF.SDs.pantro2.tsv.gz
    tabix -p vcf AC_13pops.Map50_100.TRF.SDs.pantro2.tsv.gz
done


#################################################################################################################################################

Second: Running the scan 
This is a simplified version of everything I tested and documented in 

/mnt/sequencedb/PopGen/barbara/simulations/scripts/README
(NOTE: the scripts below are in the DIR above)

*****************************************************************************

BP=3000
SLIDE=1500
LOGS=/mnt/scratch/barbara/ncv_allpops/logs/
for CHROM in {1..22}; do
    INPUT=/mnt/scratch/cee/1000G/allele_freq/LcovEx_50inds/chr${CHROM}/AC_13pops.Map50_100.TRF.SDs.pantro2.tsv.gz
    CHIMPfd=/mnt/sequencedb/PopGen/cesare/bs_genomescan/fds.hg19_pantro2.$CHROM.tsv.gz
    POSITIONS=/mnt/scratch/cee/bs_genomescan/bins/scan_bin3Mb_chr${CHROM}.pos
    NBINS=$(wc -l ${POSITIONS} | cut -f 1 -d ' ') # the number of bins for the chromosome
    for i in `seq 1 ${NBINS}`; do
#       TMPDIR=/mnt/scratch/cee/bs_genomescan/ncv_run/chr${CHROM}/bin${i}/
        TMPDIR=/mnt/scratch/barbara/ncv_allpops/${CHROM}/bin${i}/
       POS=$(sed -n ${i}p ${POSITIONS})
       qsub -e ${LOGS} -o ${LOGS} run_ncv_allpops_Rscript.sge ${INPUT} ${POS} ${BP} ${SLIDE} ${TMPDIR} ${CHIMPfd} ${i}
    done
done

#NCV without FD-ALL POPS (test)- WITH RSCRIPT INSTEAD OF LITTLE R

BP=3000
SLIDE=1500
LOGS=/mnt/scratch/barbara/ncv_allpops_no_FD/logs/
for CHROM in {1..22}; do
    INPUT=/mnt/scratch/cee/1000G/allele_freq/LcovEx_50inds/chr${CHROM}/AC_13pops.Map50_100.TRF.SDs.pantro2.tsv.gz
   # CHIMPfd=/mnt/sequencedb/PopGen/cesare/bs_genomescan/fds.hg19_pantro2.$CHROM.tsv.gz
    POSITIONS=/mnt/scratch/cee/bs_genomescan/bins/scan_bin3Mb_chr${CHROM}.pos
    NBINS=$(wc -l ${POSITIONS} | cut -f 1 -d ' ') # the number of bins for the chromosome
    for i in `seq 1 ${NBINS}`; do
#       TMPDIR=/mnt/scratch/cee/bs_genomescan/ncv_run/chr${CHROM}/bin${i}/
        TMPDIR=/mnt/scratch/barbara/ncv_allpops_no_FD/${CHROM}/bin${i}/
       POS=$(sed -n ${i}p ${POSITIONS})
       qsub -e ${LOGS} -o ${LOGS} run_ncv_allpops_Rscript_no_FD.sge ${INPUT} ${POS} ${BP} ${SLIDE} ${TMPDIR} ${i}
    done
done

####################################################################################################################################################
Third: Cesare's calculation for the proportion of each of the windows (3kb) of the scan which is actually present in the data.
This is because we took the 1000g VCF files, 1st and last position for each chromosome, and did 3 kb sliding (1.5kb) windows for the entire range.
But, of course, some regions were filtered out. 
Remember: we applied a segmental duplication, a tandem repeats and a mappability filter, apart from a filter which removes SNPs present in regions which cannot be aligned between humans and chimps (since we need the FDs
for the NCV calculation.
###############################
Cesare de Filippo
20-05-2014
## Get the coverage for the windows used in the scan.

coverageBed -a <(zcat /mnt/sequencedb/PopGen/cesare/bs_genomescan/Map50_100.TRF.SDs.hg19_pantro2.chrALL.bed.gz) -b windows_coordinates.bed | sort -k1,1 -k2,2g > windows_coordinates_cov.bed

bgzip windows_coordinates_cov.bed
tabix -p bed windows_coordinates_cov.bed.gz

INPUT FILES:
A=/mnt/sequencedb/PopGen/cesare/bs_genomescan/Map50_100.TRF.SDs.hg19_pantro2.chrALL.bed.gz
B=windows_coordinates.bed

OUTPUT FILE:
windows_coordinates_cov.bed.gz
 
It will add four extra  columns:
1) The number of features in A that overlapped (by at least one base pair) the B interval.
2) The number of bases in B that had non-zero coverage from features in A.
3) The length of the entry in B.
4) The fraction of bases in B that had non-zero coverage from features in A.

#######################################################################################################################################################

Fourth: Scan results are in the following folders

#inside the directories, there are subdirectories for each chromosome and subsubdirectories for each BIN (
#We ran the scan in ~ 900 jobs of 30 Mb each, which enables it to run in ~ 10 min.

/mnt/scratch/barbara/ncv_allpops    #NCV for all pops, NCV-with-FD

/mnt/scratch/barbara/ncv_allpops_no_FD   #NCV for all pops, NCV-no-FD


########################################################################################################################################################
5) In this directory, open R and read scripts


script_1.r #to read in the scan data and save as .RData in this directory. Close without saving
script_2.r #load the .RData for both scans and start analysing, make figures etc
script_3.sh # bash stuff, handling bed files
script_4.r  #reading in the intersected bed files, and analysing outlier windows, comparing scans etc.
make_bed_files.sh #make a bed file for MHC genes, because Debora's file doesn't match GENCODE. Also for DeGirorgio and Andres scans
mhc.coords.gencode.bed #file generated by the script above
mhc_shiina_hg19.bed  #Debora' s bed file for MHC genes
andres.2009.bed #coordinates of aidas targets of balancing selection
DG.2014.bed #coordinates of DeGiorgios candidates (T2 test, YRI, top 100)
script_5.r #restarting all analyses froms cratch after the meeting of 30.09.2014
########################################################################################################################################################
